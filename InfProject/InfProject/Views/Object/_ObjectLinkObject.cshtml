@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@using InfProject.DBContext
@using InfProject.Utils;
@using Newtonsoft.Json;
@using WebUtilsLib;
@using System.Linq;
@model (ObjectInfo, AccessControlFilter, UserContext, bool)
@inject InfProject.DBContext.DataContext dataContext
@{
    // https://localhost:7104/object/exp_e201220_gp2os2
    (ObjectInfo obj, AccessControlFilter accessControlFilter, UserContext userCtx, bool showLinksEdit) = Model;
    List<ObjectInfoLinked> list = await dataContext.ObjectLinkObject_GetLinkedObjects(obj.ObjectId, accessControlFilter);
    bool showMultipleLinkTypes = list.Select(x => x.LinkTypeObjectId ?? 0).Distinct().Count() > 1;
    var userCanAdd = Context.User.IsInRole(UserGroups.PowerUser) || Context.User.IsInRole(UserGroups.Administrator);
    string rawUrl = $"/object/{obj.ObjectNameUrl}";
    // var types = await dataContext.GetTypesFlat();
    int prevTypeId = 0, curTypeId = 0, curTypeIdCount = 0;  // to distinguish on TypeId
    int? prevLinkTypeObjectId = null;
    int curLinkTypeObjectId = 0, curLinkTypeObjectIdCount = 0;  // to distinguish on LinkTypeObjectId
    string linkTypeObjectName;

    var types = (await dataContext.GetTypes()).Where(x => !x.IsHierarchical);
    // Link type objects
    var linkTypeObjects = await dataContext.ObjectInfo_GetList_AccessControl(DataContext.LinkTypeTypeId, accessControl: (int)userCtx.access, userId: userCtx.userId);
}

<div id="AssociatedObjects" class="mt-4 dropzoneContainer" data-count="@list.Count">
    <h3 @(showLinksEdit ? " class=float-start" : string.Empty)>Associated Objects</h3>
    @if (showLinksEdit) { 
        <a href="/adminobject/editlinks/@obj.ObjectId/?returl=@rawUrl" class="btn btn-primary btnedit" title="Edit" style="float:right"><i class="bi bi-pencil"></i></a>
        <div class="clearfix"></div>
    }

    @if (list.Count > 0)
    {
        @foreach (ObjectInfoLinked row in list)
        {
            curTypeId = row.TypeId;
            curLinkTypeObjectId = row.LinkTypeObjectId ?? 0;

            if (showMultipleLinkTypes && curLinkTypeObjectId != prevLinkTypeObjectId)
            {
                if (prevLinkTypeObjectId.HasValue)
                {
                    @Html.Raw("</ul></div>")
                    @Html.Raw("</ul></div>")
                    prevTypeId = 0;
                }
                prevLinkTypeObjectId = curLinkTypeObjectId;
                linkTypeObjectName = string.IsNullOrEmpty(row.LinkTypeObjectName) ? "(unmarked)" : row.LinkTypeObjectName;
                @Html.Raw($"<button class=\"me-3 mt-3 btn btn-dark\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseLinkType{curLinkTypeObjectId}\" aria-expanded=\"false\" aria-controls=\"collapseLinkType{curLinkTypeObjectId}\">{linkTypeObjectName} [{list.Where(x => (x.LinkTypeObjectId??0) == curLinkTypeObjectId).Count()}]</button>");
                @Html.Raw($"<div class=\"collapse\" id=\"collapseLinkType{curLinkTypeObjectId}\"><ul class=\"list-group associated-content ms-4\">");
            }

            if (curTypeId != prevTypeId)
            {
                if (prevTypeId != 0)
                {
                    @Html.Raw("</ul></div>")
                }
                prevTypeId = curTypeId;
                @Html.Raw($"<button class=\"me-3 mt-3 btn btn-secondary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseType{curLinkTypeObjectId}_{curTypeId}\" aria-expanded=\"false\" aria-controls=\"collapseType{curLinkTypeObjectId}_{curTypeId}\">{dataContext.GetType(curTypeId).Result.TypeName} [{list.Where(x => x.TypeId == curTypeId && (x.LinkTypeObjectId??0) == curLinkTypeObjectId).Count()}]</button>");
                @Html.Raw($"<div class=\"collapse\" id=\"collapseType{curLinkTypeObjectId}_{curTypeId}\"><ul class=\"list-group associated-content ms-4\">");
            }
@*            <li data-id="@row.ObjectId">
                    <a href="/object/@row.ObjectNameUrl">@Html.Raw(row.ObjectName)</a><br />
                    @Html.Raw(row.ObjectDescription) <small>[@dataContext.GetType(row.TypeId).Result.TypeName]</small>
            </li>*@
            <li class="list-group-item flex-column align-items-start" data-id="@row.ObjectId" data-typeId="@row.TypeId">
                <a href="/object/@row.ObjectNameUrl" class="d-flex w-100 justify-content-between" data-id="@row.ObjectId">
                    <h5 class="mb-1">@Html.Raw(row.ObjectName)</h5>
                    <small>@(userCanAdd ? row.AccessControl.ToString() : string.Empty) @((await dataContext.GetType(row.TypeId)).TypeName)</small>
                </a>
                <p class="mb-1">@Html.Raw(row.ObjectDescription)</p>
                @if (!string.IsNullOrEmpty(row.ObjectFilePath))
                {
                    @await Html.PartialAsync("../Shared/pShowFile", new FileItem(row.ObjectId, row.TypeId, row.ObjectFilePath, enableAnalysis: true))
                    <small><a class="filetype @FileUtils.GetFileTypeClass(row.ObjectFile)" href="/file/download/@row.ObjectId">@row.ObjectFile</a></small>
                }
                @if (!string.IsNullOrEmpty(row.LinkTypeObjectName))
                {
                    <small><a href="/object/@row.LinkTypeObjectNameUrl"><i class="bi bi-link ms-5 me-1"></i>@row.LinkTypeObjectName</a></small>
                }
            </li>
        }
        @Html.Raw("</ul></div>")
        if (showMultipleLinkTypes)
        {
            @Html.Raw("</ul></div>")
        }
    } else
    {
        <p>No associated objects found.</p>    
    }
    <div id="objectLinkObject_Buttons" class="mt-1">
        @if (obj.TypeId == DataContext.SampleTypeId) {
            <a id="addSynthesis" href="/adminobject/newitem/18?idr=@obj.RubricId&ido=@obj.ObjectId&returl=@rawUrl" class="btn btn-success btnaddSynth ms-3 d-none" role="button" title="Add Synthesis" style="float:right"><i class="bi bi-shadows"></i> Add Synthesis</a>
        }
        <a id="addGeneral" href="/adminobject/?idr=@obj.RubricId&ido=@obj.ObjectId&returl=@rawUrl" class="btn btn-success btnedit ms-3" role="button" title="Add..." style="float:right"><i class="bi bi-file-plus"></i></a>
    </div>
</div>

