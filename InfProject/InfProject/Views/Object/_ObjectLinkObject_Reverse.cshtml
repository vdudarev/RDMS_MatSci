@using System.Reflection;
@using System.ComponentModel.DataAnnotations;
@using InfProject.Utils;
@using Newtonsoft.Json;
@using WebUtilsLib;
@model (ObjectInfo, AccessControlFilter)
@inject InfProject.DBContext.DataContext dataContext
@{
    // https://localhost:7104/object/smpl_s201116_ss2sag
    (ObjectInfo obj, AccessControlFilter accessControlFilter) = Model;
    List<ObjectInfoLinked> list = await dataContext.ObjectLinkObject_GetLinkedObjects_Reverse(obj.ObjectId, accessControlFilter);
    bool showMultipleLinkTypes = list.Select(x => x.LinkTypeObjectId ?? 0).Distinct().Count() > 1;
    var userCanAdd = Context.User.IsInRole(UserGroups.PowerUser) || Context.User.IsInRole(UserGroups.Administrator);
    // var types = await dataContext.GetTypesFlat();
    int prevTypeId = 0, curTypeId = 0, curTypeIdCount = 0;  // to distinguish on TypeId
    int? prevLinkTypeObjectId = null;
    int curLinkTypeObjectId = 0, curLinkTypeObjectIdCount = 0;  // to distinguish on LinkTypeObjectId
    string linkTypeObjectName;
}
@if (list.Count > 0) {
    <div id="ReferencedObjects" class="mt-4" data-count="@list.Count">
        <h3>Referenced Objects (Reverse Association)</h3>

        @if (list.Count > 0)
        {
            @foreach (var row in list)
            {
                curTypeId = row.TypeId;
                curLinkTypeObjectId = row.LinkTypeObjectId ?? 0;

                if (showMultipleLinkTypes && curLinkTypeObjectId != prevLinkTypeObjectId)
                {
                    if (prevLinkTypeObjectId.HasValue)
                    {
                        @Html.Raw("</ul></div>")
                        @Html.Raw("</ul></div>")
                        prevTypeId = 0;
                    }
                    prevLinkTypeObjectId = curLinkTypeObjectId;
                    linkTypeObjectName = string.IsNullOrEmpty(row.LinkTypeObjectName) ? "(undefined)" : row.LinkTypeObjectName;
                    @Html.Raw($"<button class=\"me-3 mt-3 btn btn-dark\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseType{curLinkTypeObjectId}_{curTypeId}\" aria-expanded=\"false\" aria-controls=\"collapseType{curLinkTypeObjectId}_{curTypeId}\">{linkTypeObjectName} [{list.Where(x => (x.LinkTypeObjectId??0) == curLinkTypeObjectId).Count()}]</button>");
                    @Html.Raw($"<div class=\"collapse\" id=\"collapseType{curLinkTypeObjectId}_{curTypeId}\"><ul class=\"list-group associated-content ms-4\">");
                }

                if (curTypeId != prevTypeId)
                {
                    if (prevTypeId != 0)
                    {
                        @Html.Raw("</ul></div>")
                    }
                    prevTypeId = curTypeId;
                    @Html.Raw($"<button class=\"me-3 mt-3 btn btn-secondary\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseType{curLinkTypeObjectId}_{curTypeId}\" aria-expanded=\"false\" aria-controls=\"collapseType{curLinkTypeObjectId}_{curTypeId}\">{dataContext.GetType(curTypeId).Result.TypeName} [{list.Where(x => x.TypeId == curTypeId && (x.LinkTypeObjectId??0) == curLinkTypeObjectId).Count()}]</button>");
                    @Html.Raw($"<div class=\"collapse\" id=\"collapseType{curLinkTypeObjectId}_{curTypeId}\"><ul class=\"list-group associated-content ms-4\">");
                }

                <li class="list-group-item flex-column align-items-start" data-id="@row.ObjectId">
                    <a href="/object/@row.ObjectNameUrl" class="d-flex w-100 justify-content-between" data-id="@row.ObjectId">
                        <h5 class="mb-1">@Html.Raw(row.ObjectName)</h5>
                        <small>@(userCanAdd ? row.AccessControl.ToString() : string.Empty) @((await dataContext.GetType(row.TypeId)).TypeName)</small>
                    </a>
                    <p class="mb-1">@Html.Raw(row.ObjectDescription)</p>
                    @if (!string.IsNullOrEmpty(row.ObjectFilePath))
                    {
                        @await Html.PartialAsync("../Shared/pShowFile", new FileItem(row.ObjectId, row.TypeId, row.ObjectFilePath, enableAnalysis: true))
                        <small><a class="filetype @FileUtils.GetFileTypeClass(row.ObjectFile)" href="/file/download/@row.ObjectId">@row.ObjectFile</a></small>
                    }
                    @if (!string.IsNullOrEmpty(row.LinkTypeObjectName))
                    {
                        <small><a href="/object/@row.LinkTypeObjectNameUrl"><i class="bi bi-link ms-5 me-1"></i>@row.LinkTypeObjectName</a></small>
                    }
                </li>
            }
            @Html.Raw("</ul></div>")
            if (showMultipleLinkTypes)
            {
                @Html.Raw("</ul></div>")
            }
        } else
        {
            <p>No referenced objects found.</p>    
        }

    </div>
}
else
{
    <!-- No reverse associataion -->
}