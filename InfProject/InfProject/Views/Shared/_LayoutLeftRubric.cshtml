@using WebUtilsLib;
@inject InfProject.DBContext.DataContext dataContext
@{
    UserContext userCtx = UserUtils.GetUserContext(Context);
    AccessControlFilter accessControlFilter = new AccessControlFilter(userCtx.access, userCtx.userId);
    // Get the current RubricId
    int RubricId;
    int.TryParse(ViewData["RubricId"]?.ToString(), out RubricId);
    RubricInfo ri = await dataContext.GetRubricById(RubricId);
    var rawUrl = System.Net.WebUtility.UrlEncode(Context.Request.Path);
    var userCanAdd = Context.User.IsInRole(UserGroups.PowerUser) || Context.User.IsInRole(UserGroups.Administrator);
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"].ToString().DeleteHtmlTags() - @dataContext.Tenant.TenantName Database</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/style-all.min.css" asp-append-version="true" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
@*    <script src="https://cdn.ckeditor.com/ckeditor5/35.4.0/classic/ckeditor.js"></script>
*@
</head>
<body>
    <partial name="Header" />

    <div class="container">
        <div class="row pb-3">
            <div class="col-sm-3">
@*                <ul class="menu-cat left-col list-group" id="menu_cat">
*@
                <ul class="menu-cat left-col" id="menu_cat">
                @if (RubricId != 0)
                {
                    var list = await dataContext.GetList_Rubric_AccessControl(ri.TypeId, ri.RubricId, accessControlFilter);
                    @foreach (var item in list)
                    {
@*                        <li class="list-group-item @($"level{item.Level}" + ((RubricId==item.RubricId)?" active":string.Empty))" style="padding-left:@(item.Level*15)px"><a href="/rubric/@item.RubricNameUrl">@item.RubricName</a></li>
*@                        <li class="@($"level{item.Level}" + ((RubricId==item.RubricId)?" active cur":string.Empty))" style="padding-left:@(item.Level*15)px"><a href="/rubric/@item.RubricNameUrl">@Html.Raw(item.RubricName)</a></li>
                    }
                } else
                {
                    List<RubricInfo> tree = null!;
                    tree = await dataContext.GetList_RubricTree_AccessControl(idType: 2, accessControlFilter);

                    int index = 0;
                    string CatalogHtml = InfProject.Utils.RubricsUtils.BuildCatalog(ref index, ParentId: 0, tree);
                    @Html.Raw(CatalogHtml)
                }
                </ul>
                @if (userCanAdd)
                {
                    <div class="mt-3">
                        <a href="/admintree/manualedit/2/?idr=0&returl=@rawUrl" class="btn btn-success btnedit" role="button" title="Add"><i class="bi bi-folder-plus"></i> Add Project</a>
                    </div>
                }
            </div>

            <main role="main" class="col-sm-9">
                <partial name="Alert" />
                @RenderBody()
            </main>
        </div>
    </div>

    <partial name="Footer" />
    <script type="text/javascript" src="~/js/rubrics.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>
        $(document).ready(function () {
            app.path = "@Context.Request.Path";
            app.queryString = "@Context.Request.QueryString.ToString()";
            @if (!string.IsNullOrEmpty((ViewData["object"] ?? string.Empty) as string))
            {
                @Html.Raw($"app.object = {ViewData["object"]};{Environment.NewLine}")
            }
            @if (!string.IsNullOrEmpty((ViewData["type"] ?? string.Empty) as string))
            {
                @Html.Raw($"app.type = {ViewData["type"]};{Environment.NewLine}")
            }
            @if (Context.Request.Path == "/identitymanager/home/users")
            {
                @Html.Raw("$('h2').after(\"<a href='/report/users/'>Users report</a>\");")
            }
            AdjustCtrlButtons(); 
            const cookie = ReadCookie(".AspNetCore.Identity.Application");
            console.log(".AspNetCore.Identity.Application = " + cookie);
        });
    </script>
    <partial name="pIncludeStaticFileContent" model=@("EndOfAllDocuments.html", "<!-- No EndOfAllDocuments.html found -->") />
</body>
</html>
